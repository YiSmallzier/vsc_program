%{ 

#include <ctype.h>
#include <stdio.h>

/*YYSTYPE?????????????????????????????????,yyparse?????????????????????*/
#define YYSTYPE double

int successFlag = 1;

/*yyerror??????yacc?ÕÇ?????????????yyparse?????§Ý????¨²????????¨²????????????????????¨²???????*/
void yyerror( char * ErrStr )
{
    printf("ERROR:%s\n", ErrStr);
}

%}

%start  lines

%token  NUMBER

%left   '+' '-'
%left   '*' '/'
%right  UMINUS

%%
lines : lines expr '\n' { printf("%g\n", $2); }
      | lines '\n'
      | /*empty*/
      | error '\n' { yyerror("?????§Ö?????????\n"); successFlag=0; yyerrok; }
      ;
expr  : expr '+' expr { $$ = $1 + $3;
                        printf("???????expr->expr+expr??%g=%g+%g\n",$$,$1,$3); }
      | expr '-' expr { $$ = $1 - $3; 
                        printf("???????expr->expr-expr??%g=%g-%g\n",$$,$1,$3); }
      | expr '*' expr { $$ = $1 * $3; 
                        printf("???????expr->expr*expr??%g=%g*%g\n",$$,$1,$3); }
      | expr '/' expr { $$ = $1 / $3; 
                        printf("???????expr->expr/expr??%g=%g/%g\n",$$,$1,$3); }
      | '(' expr ')'  { $$ = $2; 
                        printf("???????expr->(expr)??%g=(%g)\n",$$,$2);}
      | '-' expr %prec UMINUS { $$ = - $2; 
                        printf("???????expr-> -expr??%g=-%g\n",$$,$2);}
      | NUMBER        { $$ = $1;
                        printf("???????expr-> NUMBER??%f=%f\n",$$,$1 ); 
                        /* "%f"??"%g"???????????????"%g"????????????0, */ }
      ;
      
%%

/*?????lex.yy.c??????y.tab.c?§µ???????§à?????y.tab.c?????????lex.yy.c??????yylex??????????????*/
#include "lex.yy.c"

int yyparse();  /*main?????????yyparse()?????????¨²????????????—¨???????????(????????)*/

int main()
{ 
      char filename[1000];

	printf("????????????????????????"); gets(filename);
      /*???lex.yy.c????????y.tab.c?§µ??????????????BeginCompileOneFile??????
        ????????main???????§Õ????: void BeginCompileOneFile(const char *); */
	BeginCompileOneFile( filename );

        if( yyparse()==0 && successFlag==1 ) 
            printf("Successful!\n");
        else
            printf("Failed!\n");

	EndCompileOneFile();

	getchar();
      return 0;
}





   